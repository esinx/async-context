name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # for npm provenance
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run full pipeline
        run: |
          pnpm run type-check
          pnpm run lint
          pnpm run format:check
          pnpm run test run
          pnpm run build

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          jq --arg version "${{ steps.version.outputs.version }}" '.version = $version' package.json > tmp.json
          mv tmp.json package.json

      - name: Publish to npm
        run: pnpm publish --no-git-checks --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## Changes in v${{ steps.version.outputs.version }}
            
            See [CHANGELOG.md](CHANGELOG.md) for details.
            
            ## Installation
            
            ```bash
            npm install async-context@${{ steps.version.outputs.version }}
            ```
          draft: false
          prerelease: false 